apply plugin: 'com.android.library'
apply plugin: 'realm-android'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]


    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        //正式
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "buildTime", "\"" + releaseTime() + "\""
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        //仿真
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "buildTime", "\"" + releaseTime() + "\""
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        //测试
        debug{
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "buildTime", "\"" + releaseTime() + "\""
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //jdk1.8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    lintOptions {
        abortOnError false
    }


}

static def releaseTime() {
    return new Date().format("MMddHHmmss", TimeZone.getTimeZone("Asia/Shanghai"))
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //api rootProject.ext.dependencies["appcompat-v7"]
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: "support-v4"
        exclude module: "support-annotations"
    }
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["dynamic"]
    api rootProject.ext.dependencies["palette"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["annotations"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["constraint-layout"]
    api rootProject.ext.dependencies["percent"]
    api rootProject.ext.dependencies["multidex"]


    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["rxrelay"]
    api rootProject.ext.dependencies["rxandroid2"]
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["router"]

    //由于项目在早期用rx 1.x版本，后期组件化更改内容太多，固后期将rx2替换rx1
    api rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]

    api rootProject.ext.dependencies["glide"]
    api (rootProject.ext.dependencies["glide-transformations"]){
        exclude module: 'glide'
    }


    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["picasso"]
    api rootProject.ext.dependencies["takephoto"]
    api rootProject.ext.dependencies["imagepicker"]
    api rootProject.ext.dependencies["tablayout"]
    api rootProject.ext.dependencies["utilcode"]
    api rootProject.ext.dependencies["flowlayout"]
    api rootProject.ext.dependencies["easypermissions"]

    api rootProject.ext.dependencies["YCStateLib"]
    api rootProject.ext.dependencies["YCDialogLib"]
    api rootProject.ext.dependencies["YCCountDownViewLib"]
    api rootProject.ext.dependencies["YCUtilsLib"]
    api rootProject.ext.dependencies["YCMultiInputViewLib"]
    api rootProject.ext.dependencies["YCProgressLib"]
    api rootProject.ext.dependencies["YCCardViewLib"]
    api rootProject.ext.dependencies["YCCustomTextLib"]
    api rootProject.ext.dependencies["YCRecycleViewLib"]
    api rootProject.ext.dependencies["YCGalleryLib"]
    api rootProject.ext.dependencies["YCBaseAdapterLib"]
    api rootProject.ext.dependencies["YCBannerLib"]
    api rootProject.ext.dependencies["YCRefreshViewLib"]
    api rootProject.ext.dependencies["YCStatusBarLib"]
    api rootProject.ext.dependencies["YCThreadPoolLib"]
    api rootProject.ext.dependencies["notificationLib"]
    api files('libs/tbs_sdk_thirdapp_v3.2.0.jar')
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    annotationProcessor rootProject.ext.dependencies["router-compiler"]
}
